include header.doc
<!-- @(#) $Id$ -->

<h2>
Reference
</h2>

<p>

<table>
<tr>
<td>
<a href="#softreq">Software Requirements</a>
</td>
</tr>

<tr>
<td>
<a href="#usage">Usage</a>
</td>
</tr>

<tr>
<td>
<a href="#language">Language</a>
</td>
</tr>

<tr>
<td>
<a href="#internalvars">Internal Variables</a>
</td>
</tr>

<tr>
<td>
<a href="#commands">Commands</a>
<font size=-1>
<br>
&nbsp;
&nbsp;
<a href="#addpath">addpath</a>,
<a href="#arc">arc</a>,
<a href="#clearpath">clearpath</a>,
<a href="#clip">clip</a>,
<a href="#color">color</a>,
<a href="#dataset">dataset</a>,
<a href="#draw">draw</a>,
<a href="#fetch">fetch</a>,
<a href="#fill">fill</a>,
<a href="#font">font</a>,
<a href="#import">import</a>,
<a href="#justify">justify</a>,
<a href="#key">key</a>,
<a href="#label">label</a>,
<a href="#legend">legend</a>,
<a href="#let">let</a>,
<br>
&nbsp;
&nbsp;
<a href="#linestyle">linestyle</a>,
<a href="#local">local</a>,
<a href="#move">move</a>,
<a href="#newpage">newpage</a>,
<a href="#print">print</a>,
<a href="#protect">protect</a>,
<a href="#rotate">rotate</a>,
<a href="#samplepath">samplepath</a>,
<a href="#scale">scale</a>,
<a href="#shiftpath">shiftpath</a>,
<a href="#stripepath">stripepath</a>,
<a href="#stroke">stroke</a>,
<a href="#worlds">worlds</a>
</font>
</td>
</tr>

<tr>
<td>
<a href="#errors">Error Handling</a>
</td>
</tr>

<tr>
<td>
<a href="#httpserver">Mapyrus HTTP Server</a>
</td>
</tr>

</table>
<p>

include hr.doc

<a name="softreq"></a>
<h3>Software Requirements</h3>

Mapyrus requires:
<ol>
<li>
Java 2 Runtime Environment, Standard Edition, (J2RE) v1.4 or higher,
or Java 2 Software Developers Kit, Standard Edition (J2SDK) v1.4 or higher.
</li>
<li>
The Ghostscript PostScript interpreter from 
<a href="http://www.ghostscript.com">www.ghostscript.com</a>,
if creation of PDF files is required.
</li>
</ol>

include hr.doc

<a name="usage"></a>
<h3>Usage</h3>

The Mapyrus software is contained in a single Java JAR file.
Start Mapyrus in a Java interpreter with the following command.

include beginex.doc
java -classpath <i>install-path</i>/mapyrus.jar au.id.chenery.mapyrus.Mapyrus <i>filename</i>
include endex.doc

<i>install-path</i> is the directory in which
Mapyrus is installed.  <i>filename</i> is the name of a file
or a URL for Mapyrus to read from.  If <i>filename</i> is <tt>-</tt>
then standard input is read.  If several filenames and URLs are
given then they are read in turn.

<p>

Variables passed to Mapyrus using the Java <tt>-D</tt> option
are available in the Mapyrus interpreter.  Other JAR files
to be used in combination with Mapyrus are included in the
<tt>-classpath</tt> option.

include beginex.doc
java -D<i>variable</i>=<i>value</i> ... -classpath <i>install-path</i>/mapyrus.jar:<i>jarfile</i> au.id.chenery.mapyrus.Mapyrus <i>filename</i>
include endex.doc

Mapyrus runs as an 
<a href="#httpserver">HTTP Server</a> when started with the
<tt>-s</tt> option.

include beginex.doc
java -classpath <i>install-path</i>/mapyrus.jar au.id.chenery.mapyrus.Mapyrus -s <i>port</i> <i>filename</i> ...
include endex.doc

<a name="startupvariables"></a>
The following variables configure Mapyrus at startup.
<p>

<table border=1 width="100%">
<tr>

<td>
<b>Variable</b>
</td>
<td>
<b>Description</b>
</td>

</tr>
<tr>

<td>
<tt>Mapyrus.rgb.file=<i>filename</i></tt>
<td>
Defines an X Windows color names file to use for color
name lookup in the
<a href="#color">color</a> command.  Default value is
<tt>/usr/lib/X11/rgb.txt</tt>.
</tr>

<tr>
<td>
<tt>java.util.logging.config.file=<i>filename</i></tt>
<td>
Defines file controlling logging for the
<a href="#httpserver">HTTP Server</a> option.
See the
<a href="http://java.sun.com/j2se/1.4/docs/guide/util/logging/overview.html">
Java Logging Overview
</a>
and
<a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/logging/LogManager.html">
Java LogManager API documentation
</a>
for format of the file defining logging properties.
Default logging writes only errors to error output.
</tr>

<tr>
<td>
<tt>jdbc.drivers=<i>class</i></tt>
<td>
Defines class containing JDBC 1.0 (or higher) driver to load at startup.
A JDBC driver is required for connecting to a relational database and
is provided as part of a relational database.
See the
<a href="http://java.sun.com/j2se/1.4.2/docs/api/java/sql/DriverManager.html">
Java JDBC DriverManager API documentation
</a>
for details.
The JAR file containing the class must be included in the <tt>-classpath</tt>
option when starting Mapyrus.
</tr>
</table>

include hr.doc

<a name="language"></a>
<h3>Language</h3>

Mapyrus interprets commands read from one or more plain text files.
Each command begins on a separate line.
<p>
Any part of a line following a hash (<tt>#</tt>) character that is not
part of a literal string is interpreted as a comment and is ignored.
Leading and trailing spaces or tabs on a line are also ignored.
<p>
A line beginning with the word <tt>include</tt>, followed by a filename
or URL includes commands from another file.
<p>
Each command is passed zero or more arguments separated by commas.
An argument is a number, a string literal in single quotes (<tt>'</tt>)
or double quotes (<tt>"</tt>), a variable name, an array, an
array element or an expression.
<p>
An expression contains arguments and operators and functions
on those arguments, like in BASIC, C, or Python.
The following operators and functions are provided:
<p>

<table border=1 width="100%">
<tr>

<td>
<b>Operator</b>
</td>
<td>
<b>Description</b>
</td>

</tr>
<tr>

<td>
<tt>(</tt>, <tt>)</tt>
</td>
<td>
parentheses
</td>


</tr>
<tr>

<td>
<tt>*</tt>, <tt>/</tt>, <tt>%</tt>, <tt>x</tt>
</td>
<td>
numeric multiplication, numeric division, modulo (works
with non-integer values too), string repetition
</td>

</tr>
<tr>

<td>
<tt>+</tt>, <tt>-</tt>, <tt>.</tt>
</td>
<td>
numeric addition, numeric subtraction, string concatenation
</td>

</tr>
<tr>

<td>
<tt>&lt;=</tt>, <tt>&lt;</tt>, <tt>==</tt>,
<tt>!=</tt>, <tt>&gt</tt>, <tt>&gt;=</tt>,
<tt>lt</tt>, <tt>le</tt>, <tt>eq</tt>,
<tt>ne</tt>, <tt>gt</tt>, <tt>ge</tt>
</td>
<td>
numeric comparisons and string comparisons
</td>

</tr>
<tr>

<td>
<tt>and</tt>,
<tt>or</tt>,
<tt>not</tt>
</td>
<td>
Logical and, or, not
</td>

</tr>

</table>

<p>
<table border=1 width="100%">
<tr>
<td>
<b>Function Name</b>
<td>
<b>Description</b>

<tr>
<td>
<a name="ceil"></a>
<tt>ceil(<i>n</i>)<tt>
<td>
Returns the smallest integer value that is not less than <i>n</i>.

<tr>
<td>
<a name="cos"></a>
<tt>cos(<i>n</i>)<tt>
<td>
Returns the cosine of angle <i>n</i>, given in degrees.

<tr>
<td>
<a name="floor"></a>
<tt>floor(<i>n</i>)<tt>
<td>
Returns the largest integer value that is not larger than <i>n</i>.

<tr>
<td>
<a name="length"></a>
<tt>length(<i>v</i>)<tt>
<td>
If <i>v</i> is an array, then the number of elements in the
array is returned.  Otherwise the string length of <i>v</i> is returned.

<tr>
<td>
<a name="log10"></a>
<tt>log10(<i>n</i>)<tt>
<td>
Returns the base 10 logarithm of <i>n</i>.

<tr>
<td>
<a name="match"></a>
<tt>match(<i>str</i>, <i>regex</i>)<tt>
<td>
Returns the index in the string <i>str</i>, where the regular expression
<i>regex</i> is first matched.  The index of the first character is 1.
If the regular expression does not match <i>str</i>, then 0 is returned.
The 
<a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html">
Java API documentation
</a>
describes the syntax of regular expressions.

<tr>
<td>
<a name="max"></a>
<tt>max(<i>a</i>, <i>b</i>)<tt>
<td>
Returns the larger of values <i>a</i> and <i>b</i>.

<tr>
<td>
<a name="min"></a>
<tt>min(<i>a</i>, <i>b</i>)<tt>
<td>
Returns the smaller of values <i>a</i> and <i>b</i>.

<tr>
<td>
<a name="pow"></a>
<tt>pow(<i>a</i>, <i>b</i>)<tt>
<td>
Returns <i>a</i> to the power <i>b</i>.

<tr>
<td>
<a name="random"></a>
<tt>random(<i>n</i>)<tt>
<td>
Generates a random floating point number between 0 and <i>n</i>.

<tr>
<td>
<a name="replace"></a>
<tt>replace(<i>str</i>, <i>regex</i>, <i>replacement</i>)<tt>
<td>
Returns the string <i>str</i>, with all occurrences of the regular
expression <i>regex</i> replaced by <i>replacement</i>.

<tr>
<td>
<a name="round"></a>
<tt>round(<i>n</i>)<tt>
<td>
Returns <i>n</i> rounded to nearest whole number.

<tr>
<td>
<a name="sin"></a>
<tt>sin(<i>n</i>)<tt>
<td>
Returns the sine of angle <i>n</i>, given in degrees.

<tr>
<td>
<a name="split"></a>
<tt>split(<i>str</i>, <i>regex</i>)<tt>
<td>
Splits the string <i>str</i> into an array of strings, delimited by the
regular expression <i>regex</i>.
The array of split strings is returned,
with the first string having array index 1, the
second string having index 2, and so on.

<tr>
<td>
<a name="sqrt"></a>
<tt>sqrt(<i>n</i>)<tt>
<td>
Returns square root of <i>n</i>.

<tr>
<td>
<a name="substr"></a>
<tt>substr(<i>str</i>, <i>offset</i>, <i>n</i>)<tt>
<td>
Returns a substring of the string <i>str</i>, beginning at the
character with index <i>offset</i> that is <i>n</i> characters long.
The first character in <i>str</i> has an index of 1.

<tr>
<td>
<a name="tan"></a>
<tt>tan(<i>n</i>)<tt>
<td>
Returns the trigonometric tangent of angle <i>n</i>, given in degrees.

<tr>
<td>
<a name="tempname"></a>
<tt>tempname(<i>suffix</i>)<tt>
<td>
Returns a unique temporary filename with given file suffix,
for use when running as an HTTP server.
Temporary files returned by this function
are automatically deleted after 5 minutes.


</table>

<p>
An argument or expression is assigned to a named variable using the
the <a href="#let">let</a> command and an equals sign (<tt>=</tt>).
A variable name begins with a
letter or dollar sign (<tt>$</tt>) and contains only letters, numbers,
dots (<tt>.</tt>) and underbars (<tt>_</tt>).
Variable names are case-sensitive.
Variables and array elements that are accessed without having
been defined have a
value of zero, or an empty string.
<p>
Variables accepted as parameters to a procedure, or
declared in the procedure with the <a href="#local">local</a> command
are local to that procedure and not visible outside the procedure.
All other variables are global.
<p>
Array elements are accessed by giving the index between
square brackets (<tt>[</tt> and <tt>]</tt>).
The index is any string or number value.
Multi-dimension arrays are available by using
indexes named <i>index1</i><tt>."</tt><i>c</i><tt>".</tt><i>index2</i>,
where <i>c</i> is any character that never appears in an index.
<p>

The <tt>if</tt>, <tt>while</tt> and <tt>for</tt>
flow control structures
found in other languages are available:
<p>

<tt>if</tt> <i>condition</i> <tt>then</tt>
<br>
&nbsp;&nbsp;<i>then-commands</i> ...
<br>
<tt>else</tt>
<br>
&nbsp;&nbsp;<i>else-commands</i> ...
<br>
<tt>endif</tt>

<p>
Executes <i>then-commands</i> if <i>condition</i> evaluates to
a non-zero value, otherwise <i>else-commands</i> are executed.
The <tt>else</tt> part is optional.
Compound tests are built using the <tt>elif</tt> keyword:
<p>

<tt>if</tt> <i>condition</i> <tt>then</tt>
<br>
&nbsp;&nbsp;<i>commands</i> ...
<br>
<tt>elif</tt> <i>condition</i> <tt>then</tt>
<br>
&nbsp;&nbsp;<i>commands</i> ...
<br>
<tt>endif</tt>

<p>

The <tt>while</tt> keyword defines a loop in which
<i>commands</i> will be executed for as long
as <i>condition</i> continues to evaluate to a non-zero value:
<p>

<tt>while</tt> <i>condition</i> <tt>do</tt>
<br>
&nbsp;&nbsp;<i>commands</i> ...
<br>
<tt>done</tt>
<p>

The <tt>for</tt> ... <tt>in</tt> keywords define a loop in which
each element of <i>array</i> is assigned to variable <i>var</i>
and <i>commands</i> are executed.
Elements in <i>array</i> are accessed in no particular order:
<p>

<tt>for</tt> <i>var</i> <tt>in</tt> <i>array</i> <tt>do</tt>
<br>
&nbsp;&nbsp;<i>commands</i> ...
<br>
<tt>done</tt>
<p>

Procedures group frequently used commands together, save
graphics state when they begin and restore it when they end,
isolating the calling procedure from any changes:

<p>
<tt>begin</tt> <i>name</i> [<i>arg1</i>, ...]
<br>
&nbsp;&nbsp;<i>commands</i> ...
<br>
<tt>end</tt>
<p>

A procedure is defined to take a fixed number of arguments.
All procedure names are global and following the same naming
rules as variables.
Procedure definitions within a procedure are not allowed.
<p>
A procedure is called from any place where a command is accepted
and the number of arguments passed must match the number 
in the procedure definition.

<a name="gstate"></a>
<p>

Before commands in the procedure are executed
the graphics state is saved.
The graphics state is restored when the procedure finishes.
The graphics state contains:
<ul>
<li>
The path defined with
<a href="#move">move</a>,
<a href="#draw">draw</a>,
<a href="#arc">arc</a> and
<a href="#addpath">addpath</a>
commands.
</li>

<li>
The clip path defined with
<a href="#clip">clip</a> and
<a href="#protect">protect</a>
commands.
</li>

<li>
Current drawing settings set by
<a href="#color">color</a>,
<a href="#linestyle">linestyle</a>,
<a href="#font">font</a> and
<a href="#justify">justify</a> commands.
</li>

<li>
Transformations 
set by
<a href="#rotate">rotate</a>
and
<a href="#scale">scale</a> commands.
</li>

</ul>

Any new page created in a procedure with a
<a href="#newpage">newpage</a>
command is completed when the procedure finishes and output
returns to the page being created before the procedure was called.
<p>
Any dataset being imported is global.  It is not saved and not restored.
<p>
Any world coordinate system set with the
<a href="#worlds">worlds</a>
command is cleared before the commands in the procedure are
executed.
This enables the calling procedure to work in a world coordinate system
and the called procedure to draw at these world coordinate
positions using measurements in millimetres.
<p>
If the current path contains only
<a href="#move">move</a>
points and no straight line or arc segments
when a procedure is called
then the procedure is called repeatedly, one time for
each move point, with the origin (0, 0) translated to the
<a href="#move">move</a>
point each time.
Therefore, coordinates in the called procedure are relative to
the move point.
This enables drawing commands in the called procedure to be
given in millimetres, relative to each
<a href="#move">move</a>
point.
<p>

include hr.doc

<a name="internalvars"></a>
<h3>Internal Variables</h3>

All Java standard system properties (<tt>os.arch</tt>, <tt>user.dir</tt>, etc.)
are defined as variables in Mapyrus.
<p>
Mapyrus maintains the following internal variables.

<p>
<table border=1 width="100%">

<tr>
<td>
<b>Variable Name</b>
<td>
<b>Description</b>

<tr>
<td>
<tt>Mapyrus.dataset.fieldnames</tt>
<td>
An array containing the names of fields being imported from
the current dataset.  The first fieldname has array index 1.
<tr>
<td>
<tt>Mapyrus.dataset.projection</tt>
<td>
A description of the projection (coordinate system) in which coordinates
of the current dataset are stored.
Projection descriptions are not standardised between dataset formats.
Different dataset formats will return different descriptions for the same
projection.

<tr>
<td>
<tt>Mapyrus.dataset.min.x</tt>
<br>
<tt>Mapyrus.dataset.min.y</tt>
<br>
<tt>Mapyrus.dataset.max.x</tt>
<br>
<tt>Mapyrus.dataset.max.y</tt>
<td>
The bounding rectangle of all data in the current dataset.

<tr>
<td>
<tt>Mapyrus.filename</tt>
<td>
The name of the file or URL being interpreted.


<tr>
<td>
<tt>Mapyrus.freeMemory</tt>
<td>
The amount of free memory in the Java Virtual Machine, in bytes.

<tr>
<td>
<tt>Mapyrus.imagemap.x</tt>,
<tt>Mapyrus.imagemap.y</tt>
<td>
The pixel position of the point clicked in an HTML imagemap and
passed to Mapyrus, for use when running as an HTTP server.
Both values are set to -1 if no imagemap point passed in current URL.

<tr>
<td>
<tt>Mapyrus.import.count</tt>
<td>
The number of records already fetched from the current dataset.

<tr>
<td>
<tt>Mapyrus.import.more</tt>
<td>
Flag value set to 1 if another record is available
for <a href="#fetch">fetch</a>
command, or 0 if no more records available.

<tr>
<td>
<tt>Mapyrus.key.count</tt>
<td>
The number of legend entries defined with
<a href="#key">key</a> commands that have not yet
been displayed with a
<a href="#legend">legend</a> command.

<tr>
<td>
<tt>Mapyrus.page.format</tt>
<br>
<tt>Mapyrus.page.height</tt>
<br>
<tt>Mapyrus.page.width</tt>
<br>
<tt>Mapyrus.page.resolution.dpi</tt>
<br>
<tt>Mapyrus.page.resolution.mm</tt>
<td>
The file format, page height, page width
and resolution that were passed to the
<a href="#newpage">newpage</a> command.  File format is in lowercase.
Height and width are in millimetres.  Resolution is available
as either a dots-per-inch value, or a distance in millimetres between
dots.

<tr>
<td>
<tt>Mapyrus.path.length</tt>
<br>
<tt>Mapyrus.path.area</tt>
<br>
<tt>Mapyrus.path.min.x</tt>
<br>
<tt>Mapyrus.path.min.y</tt>
<br>
<tt>Mapyrus.path.max.x</tt>
<br>
<tt>Mapyrus.path.max.y</tt>
<br>
<tt>Mapyrus.path.width</tt>
<br>
<tt>Mapyrus.path.height</tt>
<td>
The length of the current path on the page measured in millimetres,
the area of the current path measured in square millimetres
and the bounding rectangle of the current path.

<tr>
<td>
<tt>Mapyrus.project.min.x</tt>
<br>
<tt>Mapyrus.project.min.y</tt>
<br>
<tt>Mapyrus.project.max.x</tt>
<br>
<tt>Mapyrus.project.max.y</tt>
<td>
The bounding rectangle of world coordinates, in the coordinate
system given as the source projection to the
<a href="#project">project</a> command.

<tr>
<td>
<tt>Mapyrus.rotation</tt>
<td>
The current rotation angle in degrees set by
<a href="#rotate">rotate</a> command.
Returned value is normalised to fall in the
range -180 to +180 degrees.

<tr>
<td>
<tt>Mapyrus.scale</tt>
<td>
The current scale factor set by 
<a href="#scale">scale</a> command.

<tr>
<td>
<tt>Mapyrus.timer</tt>
<td>
The elapsed processing time, measured in seconds.

<tr>
<td>
<tt>Mapyrus.timestamp</tt>
<td>
A string representation of the current date and time.

<tr>
<td>
<tt>Mapyrus.totalMemory</tt>
<td>
The total amount of memory in the Java Virtual Machine, in bytes.

<tr>
<td>
<tt>Mapyrus.version</tt>
<td>
The version of the software.

<tr>
<td>
<tt>Mapyrus.worlds.min.x</tt>
<br>
<tt>Mapyrus.worlds.min.y</tt>
<br>
<tt>Mapyrus.worlds.max.x</tt>
<br>
<tt>Mapyrus.worlds.max.y</tt>
<br>
<tt>Mapyrus.worlds.width</tt>
<br>
<tt>Mapyrus.worlds.height</tt>
<td>
The bounding rectangle of world coordinates set with the 
<a href="#worlds">worlds</a> command.

<tr>
<td>
<tt>Mapyrus.worlds.scale</tt>
<br>
<td>
The real-world scale factor, determined by
dividing of the X axis world coordinate range
by the page width.

</table>
<p>

include hr.doc

<a name="commands"></a>
<h3>Commands</h3>

Commands are listed alphabetically.
Some commands accept arguments in several ways.
For these commands, each combination of arguments is listed.

<p>
<a name="addpath"></a>
<tt>addpath</tt> <i>geometry-field</i> [, <i>geometry-field</i> ...]
<p>
Adds geometry in each <i>geometry-field</i> to current path.
A <i>geometry-field</i> is geometry fetched from a dataset
with a
<a href="#fetch">fetch</a> command.
<p>
Coordinates are transformed through any
transformation set with a <a href="#worlds">worlds</a> command,
then scaled and rotated by <a href="#scale">scale</a>
and
<a href="#rotate">rotate</a>
values.

include hr.doc

<p>
<a name="arc"></a>
<tt>arc</tt> <i>direction</i>, <i>xCenter</i>, <i>yCenter</i>,
<i>xEnd</i>, <i>yEnd</i>
<p>
Adds a circular arc to the current path.  The arc begins at
the last point added to the path and ends at (<i>xEnd</i>, <i>yEnd</i>)
with center at (<i>xCenter</i>, <i>yCenter</i>).
If <i>direction</i> is a positive number, the arc travels clockwise,
otherwise the arc travels in an anti-clockwise direction.
If the begin and end points are the same then the arc is a complete circle.
A straight line segment is first added to the path if
the distance from the beginning point to the center is different
to the distance from the center to the end point.
<p>
Points are transformed through any
transformation set with a <a href="#worlds">worlds</a> command,
then scaled and rotated by <a href="#scale">scale</a>
and
<a href="#rotate">rotate</a>
values.

include hr.doc

<p>
<a name="clearpath"></a>
<tt>clearpath</tt>
<p>
Removes all points from the current path.

include hr.doc

<p>
<a name="clip"></a>
<tt>clip</tt>
<p>
Sets a clip path containing the area covered by the current path.
Opposite of the
<a href="#protect">protect</a>
command.
Later drawing commands are limited to draw only inside this area.
If the path is clipped in a procedure, then the area remains
clipped until the procedure is complete.  Otherwise, the area
remains permanently clipped for the page.
When more than one path is clipped, drawing is limited to
areas inside all clip paths.
The current path is not modified by this command.

include hr.doc

<p>
<a name="color"></a>
<tt>color</tt> <i>name</i> [, <i>alpha</i>]
<br>
<tt>color "#</tt><i>hexdigits</i><tt>"</tt> [, <i>alpha</i>]
<br>
<tt>color "rgb"</tt>, <i>red</i>, <i>green</i>, <i>blue</i> [, <i>alpha</i>]
<br>
<tt>color "hsb"</tt>, <i>hue</i>, <i>saturation</i>, <i>brightness</i> [, <i>alpha</i>]
<p>
Sets color for drawing.
Named colors refer to colors in the file
<tt>/usr/lib/X11/rgb.txt</tt>, or the file given as a
<a href="#startupvariables">variable</a> at startup.
<i>hexdigits</i> is a 6 digit hexadecimal value defining RGB values,
as used in HTML pages.
Values for RGB colors and Hue-saturation-brightness (HSB)
colors are given as intensities in the range 0-1.
<p>
The alpha value is optional and defines transparency as a value in the
range 0-1.
An alpha value of 1 is completely opaque and the color overwrites
underlying colors.
An alpha value of 0 is completely transparent and the color is not visible.
Intermediate values are partially transparent and the color is blended with
colors of underlying shapes on the page.
<p>
Colors are opaque if an alpha value is not given.
Transparency is not available for PostScript output and all colors
are opaque.
<p>
The spelling <tt>colour</tt> is also accepted for this command.

include hr.doc

<p>
<a name="dataset"></a>
<tt>dataset</tt> <i>type</i>, <i>name</i>, <i>extras</i>
<p>
Defines a dataset to read from.  A dataset contains geographic data,
geometry, attributes, a lookup table, data to write to standard
output, or a combination of these.
<p>
<i>dataset</i> is the filename of the dataset to read.
<i>type</i> is the type of dataset and
<i>extras</i> defines further options for accessing the dataset, given
as <i>variable=value</i> values, separated by whitespace.
The following dataset types and options are available:

<p>

<table border=1 width="100%">
<tr>
<td>
<b>Dataset Type</b>
<td>
<b>Description and Extras</b>

<tr>
<td>
<tt>jdbc</tt>
<td>
for accessing data held in a relational database with
an SQL <tt>select</tt> statement via JDBC.
<i>name</i> contains the SQL query to execute.
For each fetched record, field values are assigned to variables
with the name of the fields.
Field values that are NULL are converted to either an empty string,
or numeric zero, depending on their type.
<p>
Some databases convert all field names to upper case, or to lowercase.
Use a field name alias for fields that are the result of an expression.
<p>
Extras:
<p>
<tt>driver=<i>string</i></tt>
<br>
The name of the Java class containing a JDBC 1.0 (or higher)
driver for connecting to the database.
This class name is required if not given in the
<a href="#startupvariables">jdbc.drivers</a> startup variable.
The JAR file containing the class must be included in the <tt>-classpath</tt>
option when starting Mapyrus.
<p>
<tt>url=<i>string</i></tt>
<br>
URL containing the database name, host and other information for identifying
the database to connect to.
The format of this string is database dependent.
The database remains connected after use and the connection is reused in later
<a href="#dataset">dataset</a> commands with the same <tt>url</tt> value.
When Mapyrus is run using the
<a href="#httpserver">HTTP Server</a> option,
requests using with the same <tt>url</tt> value share a
single database connection.
<p>
<tt>user=<i>string</i></tt>
<br>
Username for connecting to the database.
<p>
<tt>password=<i>string</i></tt>
<br>
Password for connecting to the database.
<p>
<tt>wktfields=<i>field1</i>,<i>field2</i>,...</tt>
<br>
Comma-separated list of
fieldnames that contain OGC Well Known Text geometry strings.
These fields are read as geometry values suitable for the
<a href="#addpath">addpath</a> command.
See the
<a href="http://www.opengis.org">
OpenGIS Simple Features Specification For SQL
</a>
for a description of geometry strings.
<p>
Other values are set as properties for the JDBC driver.

<tr>
<td>
<tt>shapefile</tt>
<td>
for accessing data in ESRI Shape file format.
The geometry for each fetched record is assigned to a variable named
<tt>GEOMETRY</tt>, attribute field values are assigned to
variables with attribute field names.
<p>
Extras:
<p>
<tt>dbffields=<i>field1</i>,<i>field2</i>,...</tt>
<br>
Comma-separated list of
attribute fields to read from the DBF database file accompanying the
Shape file.  By default, all fields are read.  Reading fewer attribute
fields improves performance.

<tr>
<td>
<tt>textfile</tt>
<td>
for accessing data from a delimited text file, with one
record per line.  Fields in fetched record
are assigned to variables
<tt>$1</tt>, <tt>$2</tt>, <tt>$3</tt>, ...
and the whole record is assigned to variable
<tt>$0</tt>.
<p>
Extras:
<p>
<tt>comment=<i>string</i></tt>
<br>
Character string at start of a line marking a comment line that
is to be ignored.  Default value is a hash character (<tt>#</tt>).
<p>
<tt>delimeters=<i>string</i></tt>
<br>
Characters separating fields in the text file.  Default value
is all whitespace characters.

</table>
include hr.doc

<p>
<a name="draw"></a>
<tt>draw</tt> <i>x</i>, <i>y</i>, ...
<p>
Adds one or more straight line segments to the current path.
A straight line segment is added from the previously defined point
to (<i>x</i>, <i>y</i>) and then to each further point given.
Points are first transformed through any world coordinate
transformation set with a <a href="#worlds">worlds</a> command
then scaled and rotated by <a href="#scale">scale</a>
and
<a href="#rotate">rotate</a>
values.

include hr.doc

<p>
<a name="fetch"></a>
<tt>fetch</tt>
<p>
Fetches next record from current dataset.
For each field in the record, a variable is defined with the name
of the field and the value of the field for the next record.
Before fetching a record, check the variable
<tt>Mapyrus.import.more</tt>
to ensure that another record is available from the dataset.


include hr.doc

<p>
<a name="fill"></a>
<tt>fill</tt>
<p>
Flood fills the current path with the current color.
The winding rule is used for determining the inside and outside
regions of polygons containing islands.
The current path is not modified by this command.

include hr.doc

<p>
<a name="font"></a>
<tt>font</tt> <i>name</i>, <i>size</i>
<p>
Sets font for labelling with the <a href="#label">label</a> command.
Font <i>name</i> and <i>size</i> are the name and size in
millimetres of the font to use.
<p>
If a scale factor was set with the
<a href="#scale">scale</a> command
then font size is scaled by this factor.
<p>
If a rotation was set with the
<a href="#rotation">rotation</a> command
then labels follow current rotation angle.
If no rotation is set then labels are displayed
horizontally.
<p>
Font <i>name</i>
depends on the output format set with the
<a href="#newpage">newpage</a> command.
For PostScript output, <i>name</i> is the name of a PostScript Type 1
font.
For output to an image format, <i>name</i> is one of the Java Logical
font names (<tt>Serif</tt>, <tt>SansSerif</tt>,
<tt>Monospaced</tt>, <tt>Dialog</tt>, or <tt>DialogInput</tt>) or a TrueType
font name.
<p>
Tutorial sections
<a href="tutorial.html#psfonts">Using Fonts In PostScript Output</a>
and
<a href="tutorial.html#ttffonts">Using TrueType Fonts In Output to Image Formats</a>
describe different font formats.

include hr.doc

<p>
<a name="import"></a>
<tt>import</tt> [<i>xMin</i>, <i>yMin</i>, <i>xMax</i>, <i>yMax</i>]
<p>
Begin importing records from the dataset set with the
<a href="#dataset">dataset</a> command.
After beginning an import,
each record is fetched in turn with a
<a href="#fetch">fetch</a> command.
If a bounding rectangle is given and the current
dataset contains geographic fields then only records
where the geographic field is
inside or crossing the bounding rectangle are imported.
If no bounding rectangle is given then all records in the dataset
are imported.


include hr.doc

<p>
<a name="justify"></a>
justify <i>justification</i>
<p>
Sets justification for labelling with the <a href="#label">label</a> command.
<i>justification</i> is a string containing either
<tt>left</tt>, <tt>right</tt>, <tt>center</tt> for justifying labels
horizontally and/or
<tt>top</tt>, <tt>middle</tt>, <tt>bottom</tt> for justifying labels
vertically.

include hr.doc

<p>
<a name="key"></a>
<tt>key</tt> <i>type</i>, <i>description</i>, [<i>arg1</i>, <i>arg2</i> ...]
<p>
Defines an entry for a legend.
The procedure containing this command will be called with arguments
<i>arg1</i>, <i>arg2</i> ... to display a sample of the symbol
when the legend is generated with a
<a href="#legend">legend</a> command.
The
<a href="#key">key</a>
command is ignored if used outside of a procedure.
<p>

<i>type</i> is either
<tt>point</tt> to display the legend entry as a single point,
<tt>line</tt> to display the legend entry as a horizontal line,
<tt>zigzag</tt> to display the legend entry as a zig-zag line,
or
<tt>box</tt> to display the legend as a box.
<i>description</i> is the label for the legend entry.
<p>

If a procedure displays more than one type of type of symbol depending
on the arguments passed to it then use a separate
<a href="#key">key</a> command for each, with different descriptions
and different arguments.

include hr.doc

<p>
<a name="label"></a>
<tt>label</tt> <i>string</i> [, <i>string</i> ...]
<p>
Draws a label at each point in the path
set with the <a href="#move">move</a> command, using the
font, justification and rotation set with the
<a href="#font">font</a>,
<a href="#justify">justify</a> and
<a href="#rotate">rotate</a>
commands.
<i>string</i> values are separated by spaces.
If <i>string</i> contains newline characters (<tt>\n</tt>) then
labels are displayed as multiple lines, one below the other,
with each line justified independently.

include hr.doc

<p>
<a name="legend"></a>
<tt>legend</tt> <i>size</i>
<p>
Displays legend entries defined with
<a href="#key">key</a> commands at points defined with
<a href="#move">move</a> commands.
<p>
Each legend entry corresponds to a procedure and a set of
arguments.
The first legend entry is displayed at the first
<a href="#move">move</a>
point by calling the procedure in which the first legend entry was
defined.  Then the second legend entry is displayed at the second
<a href="#move">move</a>
point.
This continues until either all legend entries are displayed
or all move points are used.
<p>
The variable
<tt>Mapyrus.key.count</tt>
contains the number of legend entries that remain to be displayed.
<p>
If there are more legend entries than 
<a href="#move">move</a> points then some legend entries
remain undisplayed and will be displayed in the next legend.
<p>
Legend entries are displayed in the order in which they
are encountered in called procedures.
<p>
Legend entries in procedures that were never called are
not included in the legend.  Therefore, the legend only shows
entries that were actually displayed.
<p>

<i>size</i> defines the size of each legend entry, in millimetres.
<p>

The description label is displayed to
the right of each legend entry, using the current
<a href="#color">color</a>,
<a href="#font">font</a> and
<a href="#justify">justify</a> settings.

include hr.doc

<p>
<a name="let"></a>
<tt>let</tt> <i>var</i> = <i>expression</i>, ...
<p>
Assigns result of evaluating <i>expression</i>
to a variable with name <i>var</i>.
The variable is globally accessible, unless defined as local to the
current procedure with a
<a href="#local">local</a> command.
<p>
Variable <i>var</i> is either a simple variable name, an
array, or an array element of the form <i>var</i>[<i>index</i>].
<p>
Several variables are assigned by separating each 
<i>var</i> and <i>expression</i> pair by a comma.

include hr.doc

<p>
<a name="linestyle"></a>
<tt>linestyle</tt> <i>width</i>
<br>
<tt>linestyle</tt> <i>width</i>, <i>cap</i>, <i>join</i>
<br>
<tt>linestyle</tt> <i>width</i>, <i>cap</i>, <i>join</i>,
<i>phase</i>, <i>dash length</i>, ...
<p>
Sets style line drawing by the <a href="#stroke">stroke</a>
command.
Line <i>width</i> given in millimetres.
<i>cap</i> is the style to use at the ends of lines, either
<tt>butt</tt>, <tt>round</tt> or <tt>square</tt>.
<i>join</i> is the style to use where lines join, either
<tt>bevel</tt>, <tt>miter</tt> or <tt>round</tt>.
One or more <i>dash length</i> values are given, alternating
between the length of one dash and the length of space between
dashes in a dash pattern.  Each <i>dash length</i> is given in millimetres.
<i>phase</i> is the offset in millimetres into the dash pattern 
at which to begin.

include hr.doc

<p>
<a name="local"></a>
<tt>local</tt> <i>name</i>, [<i>name</i> ...]
<p>
Declares the listed variable names as local to a procedure.
The variables are not visible outside the enclosing procedure
and their values are lost when the procedure ends.

include hr.doc

<p>
<a name="move"></a>
<tt>move</tt> <i>x</i>, <i>y</i>
<p>
Adds the point (<i>x</i>, <i>y</i>) to the current path.  The
point is first transformed through any world coordinate
transformation set with a <a href="#worlds">worlds</a> command,
then scaled and rotated by <a href="#scale">scale</a>
and
<a href="#rotate">rotate</a>
values.

include hr.doc

<p>
<a name="newpage"></a>
<tt>newpage</tt> <i>format</i>, <i>filename</i>, <i>width</i>,
<i>height</i>, <i>resolution</i>, <i>extras</i>
<p>
Begins output of a new page to a file.  Any previous output is closed.
The path, clipping path and world coordinates are cleared.
The new page has a white background, with origin in the lower-left
corner.
<i>format</i> is the file format to use for output, one of:
<ul>
<li>
<tt>eps</tt> for Encapsulated PostScript output.
</li>
<li>
<tt>ps</tt> for PostScript output.
</li>
<li>
<tt>jpeg</tt> for JPEG image output.
</li>
<li>
<tt>png</tt> for PNG image output.
</li>
</ul>

See the <a href="tutorial.html#pdf">Tutorial</a> section for
information on converting PostScript output to PDF format.
<p>
<i>width</i> and <i>height</i> are the dimensions of the page,
in millimetres.
<i>resolution</i> is given as a dots-per-inch value.
<p>
<i>filename</i> is the name of the file to write the page to.
If <i>filename</i> is a dash (<tt>-</tt>)
then the page is written to standard output.
If <i>filename</i> begins with a pipe (<tt>|</tt>) then the rest
of <i>filename</i> is interpreted as an operating system
command.  The operating system command is executed and Mapyrus
writes the page to the standard input of the executing
operating system command.
Mapyrus executes the operating command directly.  Set <i>filename</i> to
<tt>"| sh <i>myscript.sh</i>"</tt>
or
<tt>"| cmd <i>myscript.bat</i>"</tt>
to execute the command in a sub-shell if 
environment variables, file redirection or other shell features are
required.
<p>
<i>extras</i> defines further options for the new page, given as
<i>variable=value</i> values, separated by whitespace.
<p>

<table border=1 width="100%">
<tr>
<td>
<b>File Format</b>
<td>
<b>Extras</b>

<tr>
<td>
<tt>ps</tt>, <tt>eps</tt>
<td>
<tt>pfafiles=<i>filename</i>,<i>filename2</i>,...</tt>
<br>
Comma-separated list of PostScript Type 1 font filenames
to include in this PostScript file.
A PostScript Type 1 font is defined in a file
with suffix <tt>.pfa</tt>.  Include
files for all PostScript fonts to be used in this
page that are not known by the printer.
<p>
See the <a href="tutorial.html#psfonts">Tutorial</a> section for
information on converting TrueType fonts to PostScript Type 1 format.
</td>
</tr>
<tr>
<td>
<tt>png</tt>, <tt>jpeg</tt>
<td>
<tt>ttffiles=<i>filename</i>,<i>filename2</i>,...</tt>
<br>
Comma-separated list of TrueType font filenames
to load for this page.
A TrueType font is defined in a file
with suffix <tt>.ttf</tt>.
<p>
Do not use this option on operating systems that support
TrueType fonts (Windows, Mac).  All TrueType
fonts are already available from the operating system.
<p>
On operating systems that do not support TrueType fonts
(Linux, UNIX) include filenames of all TrueType
fonts to be used on this page.  These fonts are loaded
by Mapyrus.
</tr>
</table>

include hr.doc

<p>
<a name="print"></a>
<tt>print</tt> <i>string</i> [, <i>string</i> ...]
<p>
Prints each <i>string</i> to standard output,
separated by spaces.
A newline is added after the final <i>string</i>.
<p>

<!--
<p>
<a name="project"></a>
<tt>project</tt> <i>from</i>, <i>to</i>
Coordinate system transformation.
-->

include hr.doc

<p>
<a name="protect"></a>
<tt>protect</tt>
<p>
Defines a clip path to
protect the area of the page covered by the current path and
prevent it from being overwritten by later drawing commands.
Opposite of the
<a href="#clip">clip</a>
command.
If the path is protected in a procedure, then the area remains
protected until the procedure is complete.  Otherwise, the area
remains permanently protected for the page.
When more than one area is protected, the union of all areas
is protected.
The current path is not modified by this command.

include hr.doc

<p>
<a name="rotate"></a>
<tt>rotate</tt> <i>angle</i>
<p>
Rotates the coordinate system, adding to any existing rotation.
<i>angle</i> is given in degrees, measured counter-clockwise.
All later coordinates given in
<a href="#move">move</a>,
<a href="#draw">draw</a>,
<a href="#arc">arc</a> and
<a href="#addpath">addpath</a>
commands are rotated by this angle.

include hr.doc

<p>
<a name="samplepath"></a>
<tt>samplepath</tt> <i>spacing</i>, <i>offset</i>
<p>
Replaces current path with equally spaced points along the path.
<i>offset</i> is the distance along the path at which to place first point,
given in millimetres.
<i>spacing</i> is the distance between points, given in millimetres.
The sign of <i>spacing</i>
controls the direction in which the path is travelled.
If <i>spacing</i> is a positive value, the path is travelled from the
beginning towards the end.
If <i>spacing</i> is a negative value, then the absolute value of
<i>spacing</i> is used and the path is travelled from the end towards
the beginning.
Using a very large postive or negative value for <i>spacing</i> results
in current path being replaced by a single point at the beginning or
end of the path.
include hr.doc

<p>
<a name="scale"></a>
<tt>scale</tt> <i>factor</i>
<p>
Scales the coordinate system, adding to any existing scaling.
<i>factor</i> is scale factor for X and Y axes.
All later coordinates given in
<a href="#move">move</a>,
<a href="#draw">draw</a>,
<a href="#arc">arc</a> and
<a href="#arc">addpath</a>
commands are scaled by this factor.

include hr.doc

<p>
<a name="shiftpath"></a>
<tt>shiftpath</tt> <i>x</i>, <i>y</i>
<p>
Shifts all points in the current path <i>x</i> millimetres along the X axis
and <i>y</i> millimetres along the Y axis.
Shift values are scaled and rotated by <a href="#scale">scale</a>
and
<a href="#rotate">rotate</a>
values.
Use this command repeatedly following a 
<a href="#protect">protect</a> command to
produce a shadow effect for polygons.

include hr.doc

<p>
<a name="stripepath"></a>
<tt>stripepath</tt> <i>spacing</i>, <i>angle</i>
<p>
Replaces current path with equally spaced parallel lines that completely
cover the path.
<i>spacing</i> is the distance between lines, measured in millimetres.
<i>angle</i> is angle of each line, measured in counter-clockwise in
degrees, with zero being horizontal.
Follow this command with a <a href="#clip">clip</a> command to
produce a hatched fill pattern.

include hr.doc
<p>
<a name="stroke"></a>
<tt>stroke</tt>
<p>
Draws the current path using the current color and linestyle.
The current path is not modified by this command.

include hr.doc

<p>
<a name="worlds"></a>
<tt>worlds</tt> <i>x1</i>, <i>y1</i>, <i>x2</i>, <i>y2</i> [, <i>units</i>]
<p>
Defines a world coordinate system for the page with
(<i>x1</i>, <i>y1</i>) in the lower-left corner of the page and
(<i>x2</i>, <i>y2</i>) in the upper-right corner, replacing any existing
world coordinate system.
The world coordinate range is expanded in the X or Y axis,
if necessary, to maintain uniform scaling.

<i>units</i> define the units of the world coordinates,
either <tt>metres</tt>, <tt>meters</tt> or <tt>feet</tt>.
If not given, units are assumed to be metres.

include hr.doc

<a name="errors"></a>
<h3>Error Handling</h3>
<p>
If Mapyrus encounters an error when interpreting commands,
an error message is printed including the filename and line number
at which the error occurs and Mapyrus exits immediately.
The Java interpreter exits with a non-zero status.
If an error occurs when using the
<a href="#httpserver">HTTP Server</a>
option, an HTTP failure status and the error message
are returned to the HTTP client.  The HTTP server continues,
handling the next request.

include hr.doc

<a name="httpserver"></a>
<h3>Mapyrus HTTP Server</h3>
<p>

Mapyrus runs as an HTTP server when started with the
<tt>-s</tt>
command line option.
<p>
The HTTP server accepts and replies to requests from HTTP clients
on the given port number.
If port number is 0 then any free port number is used.  The port
number used is written to the log file or to standard output.
<p>
The HTTP server is multi-threaded to enable several requests to
be handled simultaneously.  If the HTTP server
receives an HTTP request for a file with a suffix
matching a well-known MIME type (<tt>html</tt>, <tt>txt</tt>, <tt>ps</tt>,
<tt>pdf</tt>, <tt>zip</tt> or a web image format),
then the contents of that file are returned by the HTTP server to the
HTTP client.
Requests for files with no suffix, or with unknown file suffix are
interpreted by Mapyrus using the following steps.

<ol>
<li>
Set any parameters passed in the URL (following the <tt>?</tt> character in
the URL or passed in an HTML form) as variables in Mapyrus.
<li>
Read and execute the commands from the filename given in the URL.
<li>
Capture the standard output of these commands and return it to the
to HTTP client.  An HTML page is returned if
<a href="#print">print</a> commands are used.  An image file is
returned if the
<a href="#newpage">newpage</a> command is used with output file set
to standard output.
An HTTP error state is returned if the request fails.
</ol>

<p>
Requests using either GET or POST methods are accepted by Mapyrus.
<p>
The HTTP server runs forever and
is stateless.  Each HTTP request is independent and
variables, graphics state and legend entries are not shared between
requests.  Cookies are not used.
Any files or URLs given on the command line when Mapyrus is started
are interpreted before accepting HTTP requests.
Procedures defined in these files
are available when interpreting HTTP requests.  This enables
common procedures to be loaded only once at startup and not with every
HTTP request.
<p>
Files are not cached and are read for each HTTP request.
<p>
For security, the HTTP server only replies to requests
from the directory in which Mapyrus was started.
Requests for files from other directories return an error to the HTTP client.
If communication between HTTP client and Mapyrus is blocked for longer than
5 minutes then the HTTP request is cancelled.
When all threads in the HTTP server are busy handling requests,
further requests are queued.
<p>
Logging of HTTP requests is controlled by setting a
<a href="#startupvariables">variable</a> at startup defining
a logging configuration file.

include footer.doc

