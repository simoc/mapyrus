# Display requested area of file roads.shp in a PNG file.
#
let imageFile = tempname("PNG")
newpage "png", imageFile, 100, 100

dataset "shapefile", "/tmp/roads.shp", "dbffields=FEATURE"
if x1 eq ""
then
	let x1 = Mapyrus.dataset.min.x
	let y1 = Mapyrus.dataset.min.y
	let x2 = Mapyrus.dataset.max.x
	let y2 = Mapyrus.dataset.max.y
endif

worlds x1, y1, x2, y2
while Mapyrus.fetch.more
do
	clearpath
	fetch
	addpath GEOMETRY

	# Display different classes of roads in different colors.
	#
	if FEATURE eq 'Principal Highway'
	then
		color "red"
	else
		color "orange"
	endif
	stroke
done

let x1 = Mapyrus.worlds.min.x
let y1 = Mapyrus.worlds.min.y
let x2 = Mapyrus.worlds.max.x
let y2 = Mapyrus.worlds.max.y
let xMid = (x1 + y2) / 2
let yMid = (y1 + y2) / 2

# Ratio of area being displayed to zoom or pan each time.
#
let panFactor = 0.2
let zoomFactor = 0.2

let xPan = panFactor * Mapyrus.worlds.width
let yPan = panFactor * Mapyrus.worlds.height
let xZoom = zoomFactor * Mapyrus.worlds.width
let yZoom = zoomFactor * Mapyrus.worlds.height

# Set URLs for navigating around current display.
#
let upURL = Mapyrus.filename . '?x1=' . x1 . '&y1=' . (y1 + yPan) . '&x2=' . x2 . '&y2=' . (y2 + yPan)
let downURL = Mapyrus.filename . '?x1=' . x1 . '&y1=' . (y1 - yPan) . '&x2=' . x2 . '&y2=' . (y2 - yPan)
let leftURL = Mapyrus.filename . '?x1=' . (x1 - xPan) . '&y1=' . y1 . '&x2=' . (x2 - xPan) . '&y2=' . y2
let rightURL = Mapyrus.filename . '?x1=' . (x1 + xPan) . '&y1=' . y1 . '&x2=' . (x2 + xPan) . '&y2=' . y2
let zoomInURL = Mapyrus.filename . '?x1=' . (x1 + xZoom) . '&y1=' . (y1 + yZoom) . '&x2=' . (x2 - xZoom) . '&y2=' . (y2 - yZoom)
let zoomOutURL = Mapyrus.filename . '?x1=' . (x1 - xZoom) . '&y1=' . (y1 - yZoom) . '&x2=' . (x2 + xZoom) . '&y2=' . (y2 + yZoom)

# Spool HTML file to standard output, replacing placeholder tokens
# with actual values for this request.
#
mimetype "text/html"
let r = spool("tutorialhtmlpage2.txt")
let r = replace(r, '@placeholder_title@', 'Real Title')
let r = replace(r, '@placeholder_coordinates@', xMid . ', ' . yMid)
let r = replace(r, '@placeholder_image@', imageFile)
let r = replace(r, '@placeholder_up_url@', upURL)
let r = replace(r, '@placeholder_down_url@', downURL)
let r = replace(r, '@placeholder_left_url@', leftURL)
let r = replace(r, '@placeholder_right_url@', rightURL)
let r = replace(r, '@placeholder_zoom_in_url@', zoomInURL)
let r = replace(r, '@placeholder_zoom_out_url@', zoomOutURL)
print r
